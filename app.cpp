#include "includes.hpp"
#include "helpers/comms.hpp"

#include "views/main.cpp"
#include "views/select_frequency.cpp"
#include "views/select_song.cpp"
#include <memory>

/* generated by fbt from .png files in images folder */
#include <pifm_icons.h>

extern "C" int32_t pifm_entrypoint(void* p) {
    UNUSED(p);
    FURI_LOG_I(TAG, "Hello world");

    Gui* gui = (Gui*)furi_record_open(RECORD_GUI);

    {
        ViewDispatcher* vd = view_dispatcher_alloc();
        auto main_view = std::make_unique<MainView>(vd);
        auto select_freq_view = std::make_unique<SelectFrequencyView>();
        auto select_song_view = std::make_unique<SelectSongView>(vd);

        view_dispatcher_enable_queue(vd);

        view_dispatcher_add_view(vd, static_cast<uint32_t>(Views::MainView), main_view->getView());
        view_dispatcher_add_view(
            vd, static_cast<uint32_t>(Views::SetFrequencyView), select_freq_view->getView());
        view_dispatcher_add_view(
            vd, static_cast<uint32_t>(Views::SetSongView), select_song_view->getView());

        view_dispatcher_attach_to_gui(vd, gui, ViewDispatcherTypeFullscreen);
        view_dispatcher_switch_to_view(vd, static_cast<uint32_t>(Views::MainView));

        view_dispatcher_run(vd);

        view_dispatcher_free(vd);
        furi_record_close(RECORD_GUI);
    }

    CommunicationHandler::resetInstance();

    return 0;
}
